@model IEnumerable<Ebook>

@{
    ViewBag.Title = "All Ebooks";
}
<h1 class="display-4">Welcome on shop with ebooks!</h1>
<br />
<h2>All Ebooks</h2>
<div>
    <div class="dropdown">
        <button class="btn btn-light dropdown-toggle" type="button" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
            Sort by:
        </button>
        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
            <a asp-action="List" class="dropdown-item" asp-route-sortOrder="@ViewData["LowToHigh"]">Low To High</a>
            <a asp-action="List" class="dropdown-item" asp-route-sortOrder="@ViewData["HighToLow"]">High To Low</a>
        </div>
    </div>

    <form asp-action="List" method="get">
        <div class="form-actions no-color">
            <p>
                Find by title: <input type="text" name="SearchString" value="@ViewData["CurrentFilter"]" />
                <input type="submit" value="Search" class="btn btn-default" /> |
                <a asp-action="List">Back to Full List</a>
            </p>
        </div>
    </form>
</div>


<div class="row">
    @foreach (var ebook in Model)
    {
        var photoPath = "~/images/" + (ebook.PhotoPath ?? "noimage.png");

        <div class="card" style="width: 18rem; max-width:25%;">
            <img class="card-img-top imgThumbnail" src="@photoPath" alt="image" asp-append-version="true">
            <div class="card-body">
                <h5 class="card-title">@ebook.Title</h5>
                <p class="card-text">@ebook.Description</p>
                <p class="card-text">@(ebook.Price + " zł")</p>
                <a asp-controller="ShoppingCart" asp-action="AddToShoppingCart" class="btn btn-primary">Add to cart</a>
                @if (User.Identity.IsAuthenticated)
                {
                    <a class="btn btn-light" asp-controller="Ebook" asp-action="Edit" asp-route-id="@ebook.EbookId">Edit</a>
                }
            </div>
        </div>
    }
</div>

@*@{
        var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";

    }
    <a class="btn btn-default @prevDisabled" asp-action="List" asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@("Model.PageIndex - 1")" asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Previous
    </a>
    <a class="btn btn-default @nextDisabled" asp-action="List" asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-pageNumber="@("Model.PageIndex + 1")" asp-route-currentFilter="@ViewData["CurrentFilter"]">
        Next
    </a>*@